# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Triggers workflow also manually
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[Gradle Release Plugin]')"

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      env:
        GITHUB_USERNAME: x-access-token
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./gradlew test shadowJar publish --info

    - name: Upload the artifacts
      uses: skx/github-action-publish-binaries@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: 'build/libs/pages-processor-*.jar'

    - name: Set docker tag label for git tags
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "DOCKER_TAG=$( echo $GITHUB_REF | cut -d / -f 3- )" >> $GITHUB_ENV

    - name: Print parameters
      run: echo "image_tag=${{ env.DOCKER_TAG }} reference=${{ github.ref }}"

    - name: Login to DockerHub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to Github Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.1.0

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2.4.1

    - name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - name: Build and push Docker imag
      run: TAG=andriyg76/pages-processor:${{ env.DOCKER_TAG }} &&
        GITHUB_TAG=ghcr.io/${{ github.repository }} &&
        docker buildx build --platform linux/amd64 . --file Dockerfile --tag $TAG  --tag $GITHUB_TAG --push
